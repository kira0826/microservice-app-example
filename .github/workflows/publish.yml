name: Publish to GHCR
on:
  push:
    branches:
      - master
    paths:
      - 'auth-api/**'
      - 'frontend/**'
      - 'log-message-processor/**'
      - 'todos-api/**'
      - 'users-api/**'
      - '.github/workflows/**'

permissions:
  packages: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: microservicesEnv
    env: 
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
    strategy:
      matrix:
        include:
          - service: auth-api
            type: backend
            context: ./auth-api
            version: $(cat auth-api/VERSION)  
          - service: frontend
            type: frontend
            context: ./frontend
            version: $(cat frontend/VERSION)
          - service: log-processor
            type: backend
            context: ./log-message-processor
            version: $(cat log-message-processor/VERSION)
          - service: todos-api
            type: backend
            context: ./todos-api
            version: $(cat todos-api/VERSION)
          - service: users-api
            type: backend
            context: ./users-api
            version: $(cat users-api/VERSION)

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}
          tags: |
            type=raw,value=${{ matrix.version }}-${{ matrix.type }}
            type=raw,value={{ date 'YYYYMMDD-HHmmss' }}-${{ matrix.type }}
            type=sha,prefix=${{ matrix.type }}-
          labels: |
            org.opencontainers.image.title=${{ matrix.service }}
            org.opencontainers.image.description=${{ matrix.type }} service for microservices architecture
            org.opencontainers.image.version=${{ matrix.version }}
            com.docker.image.environment.tier=${{ matrix.type }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}