name: Publish to GHCR
on:
  push:
    branches:
      - master
    paths:
      - 'auth-api/**'
      - 'frontend/**'
      - 'log-message-processor/**'
      - 'todos-api/**'
      - 'users-api/**'
      - '.github/workflows/**'

permissions:
  packages: write
  contents: read

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Get changed directories
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            auth-api/**
            frontend/**
            log-message-processor/**
            todos-api/**
            users-api/**

      - name: Set matrix
        id: set-matrix
        run: |
          # Preparar la matriz basada en los directorios cambiados
          SERVICES="["
          if [[ ${{ contains(steps.changed-files.outputs.all_changed_files, 'auth-api/') }} == true ]]; then
            SERVICES="$SERVICES{\"service\":\"auth-api\",\"type\":\"backend\",\"context\":\"./auth-api\",\"version\":\"$(cat auth-api/VERSION)\"},"
          fi
          if [[ ${{ contains(steps.changed-files.outputs.all_changed_files, 'frontend/') }} == true ]]; then
            SERVICES="$SERVICES{\"service\":\"frontend\",\"type\":\"frontend\",\"context\":\"./frontend\",\"version\":\"$(cat frontend/VERSION)\"},"
          fi
          if [[ ${{ contains(steps.changed-files.outputs.all_changed_files, 'log-message-processor/') }} == true ]]; then
            SERVICES="$SERVICES{\"service\":\"log-processor\",\"type\":\"backend\",\"context\":\"./log-message-processor\",\"version\":\"$(cat log-message-processor/VERSION)\"},"
          fi
          if [[ ${{ contains(steps.changed-files.outputs.all_changed_files, 'todos-api/') }} == true ]]; then
            SERVICES="$SERVICES{\"service\":\"todos-api\",\"type\":\"backend\",\"context\":\"./todos-api\",\"version\":\"$(cat todos-api/VERSION)\"},"
          fi
          if [[ ${{ contains(steps.changed-files.outputs.all_changed_files, 'users-api/') }} == true ]]; then
            SERVICES="$SERVICES{\"service\":\"users-api\",\"type\":\"backend\",\"context\":\"./users-api\",\"version\":\"$(cat users-api/VERSION)\"},"
          fi
          SERVICES="${SERVICES%,}]"  # Eliminar la Ãºltima coma y cerrar el array
          echo "matrix={\"include\":$SERVICES}" >> $GITHUB_OUTPUT

  build-and-push:
    needs: detect-changes
    if: needs.detect-changes.outputs.matrix != '{\"include\":[]}'
    runs-on: ubuntu-latest
    environment: microservicesEnv
    env: 
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
    strategy:
      matrix: ${{fromJson(needs.detect-changes.outputs.matrix)}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}
          tags: |
            type=raw,value=${{ matrix.version }}-${{ matrix.type }}-dev
            type=raw,value=${{ matrix.version }}-${{ matrix.type }}-prod
            type=raw,value=${{ matrix.type }}-latest
            type=schedule,pattern={{date 'YYYYMMDD-HHmmss'}}-${{ matrix.type }}
            type=sha,prefix=${{ matrix.type }}-
          labels: |
            org.opencontainers.image.title=${{ matrix.service }}
            org.opencontainers.image.description=${{ matrix.type }} service for microservices architecture
            org.opencontainers.image.version=${{ matrix.version }}
            com.docker.image.environment.tier=${{ matrix.type }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}